@model WebApp.Models.PedidoModel

@{
        ViewBag.Title ="Mi Carro de Compras";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">

    @if (ViewBag.Permiso != null)
    {
        <script class="mayus">
            (function alert() {

                Swal.fire({
                    title: '@ViewBag.Permiso!',
                    timer: 1500,
                    type:error
                })
            })();

        </script>
    }

    <section class="content-header">
        <h1>
            Carrito de Compras

            <i class="fa fa-cart-plus" aria-hidden="true"></i>
        </h1>
        <ol class="breadcrumb"></ol>
    </section>


    <section class="content">
        <div class="row">
            <div class="col-xs-12 ">
                <div class="box box-primary">
                    <div class="box-body">

                        @if (Model.Total == 0)
                        {
                            <div class="alert alert-danger bordes text-center">
                                <i class="icon fa fa-ban"></i>
                                <strong>Su Carro se encuentra vacio .Dirigase al Catalogo para agregar su producto !</strong>
                            </div>
                        }

                        else
                        {

                            using (Html.BeginForm("CargarPedido", "Pedido", FormMethod.Post, htmlAttributes: new { id = "form-pedido" }))
                            {

                                @Html.AntiForgeryToken()

                                <div class="table-responsive">

                                    <table class="table table-striped table-hover" id="tablacarro">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.DetallesPedido.First().Producto)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.DetallesPedido.First().Producto.PrecioUnitario)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.DetallesPedido.First().Cantidad)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.DetallesPedido.First().SubTotal)
                                                </th>
                                                <th></th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @foreach (var item in Model.DetallesPedido)
                                            {
                                                <tr id="tbody" data-precio-unitario="@item.Producto.PrecioUnitario" data-subtotal="@item.SubTotal" data-cantidad="@item.Cantidad" data-codigo-producto="@item.Producto.Codigo">

                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.Producto.Nombre)
                                                    </td>
                                                    <td>
                                                        <div style="float: right;" class="precioUnitario">
                                                            @Html.DisplayFor(model => item.Producto.PrecioUnitario)
                                                        </div>
                                                    </td>
                                                    <td id="cantidad" class="centrado">
                                                        @Html.TextBoxFor(modelItem => item.Cantidad, new { type = "number", min = "1", @class = "cantidad bordes ", style = "text-align: center" })
                                                    </td>
                                                    <td>
                                                        <div style="float: right;" class="subtotal">
                                                            @Html.DisplayFor(model => item.SubTotal)
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div style="float: right;">
                                                            <button type="button" class="eliminar btn-danger bordes"><i class="fa fa-trash-o" aria-hidden="true"></i> Eliminar</button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>

                                        <tfoot id="tfoot" data-total="@Model.Total">
                                            <tr>
                                                <th>@Html.DisplayNameFor(model => model.Total)</th>
                                                <td></td>
                                                <td></td>

                                                <th>
                                                    <div style="float:right;" class="total">
                                                        $   @Model.Total
                                                    </div>
                                                </th>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Observacion, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Observacion, new { htmlAttributes = new { @class = "form-control Observaciones bordes" } })
                                        @Html.ValidationMessageFor(model => model.Observacion, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-10">
                                    </div>
                                </div>
                                <div class="form-group has-feedback">
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            <button type="button" class="btn btn-success botones-carro btnAgregarPedido">Enviar Pedido</button>

                                            @Html.ActionLink("Seguir Comprando", "Index", "Catalogo", null, new { @class = "btn btn-default botones-carro " })
                                        </div>
                                    </div>

                                </div>

                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </section>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }



</div>
