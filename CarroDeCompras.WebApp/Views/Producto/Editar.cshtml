@model WebApp.Models.Producto

@{
    ViewBag.Title = "Producto-" + Model.Codigo + "-" + Model.Nombre;
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="content-wrapper">

    @*<section class="content-header">
            <h1>
                Administrador
                <small>Editar Producto</small>
            </h1>
            <ol class="breadcrumb"></ol>
        </section>*@


    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box box-primary">
                    <div class="box-body">


                        @using (Html.BeginForm("Editar", "Producto", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-editar" }))
                        {
                            @Html.AntiForgeryToken()
                            <div>
                                <img src="@Url.Content(Model.UrlImange)"/>
                            </div>

                            <div class="form-horizontal">
                                <h4>Edición de Producto-@Model.Codigo-@Model.Nombre</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @readonly = true, @class = "control-editor col-md-2 bordes " } })
                                        @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "control-editor col-md-6 bordes" } })
                                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "control-editor col-md-6 bordes" } })
                                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    @Html.LabelFor(model => model.PrecioUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.PrecioUnitario, new { htmlAttributes = new { @class = "control-editor col-md-6 bordes" } })
                                        @Html.ValidationMessageFor(model => model.PrecioUnitario, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.IdMarca, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.IdMarca, new SelectList(ViewBag.lista, "Id", "Nombre"), htmlAttributes: new { @class = "btn btn-primary btn-sm dropdown-toggle" })
                                        @Html.ValidationMessageFor(model => model.IdMarca, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UrlImange, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <input type="file" name="File" id="File" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Activo)
                                        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="button" value="Editar" class="btn btn-success col-md-2 fa fa-check-square-o bordes" id="editar" />
                                    </div>
                                </div>

                            </div>
                        }
                        <div class="box-footer">
                            <a href="@Url.Action("Index","Producto")" class="col-md-3 pull-right btn btn-primary bordes">
                                <i class="fa fa-undo" aria-hidden="true"></i>
                                <span>Volver al Listado</span>
                            </a>
                        </div>

                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                        }



                    </div>
                </div>
              
            </div>
        </div>
    </section>
</div>

